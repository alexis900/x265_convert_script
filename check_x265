#!/bin/bash

# This script checks for pending video files that need to be processed and logs them.

# Detect if running from a deb package install or from source directory
SCRIPT_DIR = $(dirname "${BASH_SOURCE[0]}")
if [[ -d "/usr/local/share/x265_convert_script" && $SCRIPT_DIR == "/usr/local/bin" ]]; then
    SHARE_PATH="/usr/local/share/x265_convert_script"
else
    SHARE_PATH="$SCRIPT_DIR"
fi

SRC_PATH="$SHARE_PATH/src"

# Load environment variables and utility functions
if [[ -f "$SHARE_PATH/config/preferences.conf" ]]; then
    source "$SHARE_PATH/config/preferences.conf"
else
    echo "Error: preferences.conf not found in $SHARE_PATH. Exiting..."
    exit 1
fi

# Verify if the required files exist
declare -A required_files=(
    ["logging.sh"]="$SRC_PATH"
    ["file_utils.sh"]="$SRC_PATH"
    ["media_utils.sh"]="$SRC_PATH"
)

for file in "${!required_files[@]}"; do
    full_path="${required_files[$file]}/$file"
    if [[ ! -f "$full_path" ]]; then
        echo "Error: Required file $file does not exist in ${required_files[$file]}. Exiting..."
        exit 1
    fi

    if [[ "$file" == *.sh ]]; then
        # shellcheck disable=SC1090
        source "$full_path"
    fi
done

log "INFO" "Checking directory: ${ACTUAL_DIR}" "${REMAINING_LOG}"
if [ ! -d "${ACTUAL_DIR}" ]; then
    log "ERROR" "Error! Directory ${ACTUAL_DIR} does not exist." "${REMAINING_LOG}"
    exit 1
fi

log "INFO" "Searching for pending files..." "${REMAINING_LOG}"

files_pending=$(find_pending_files)

# Check if files have been processed and if they have the 'larger' attribute
while IFS= read -r file; do
    xattr_output=$(check_xattr_larger "$file")

    if [[ -n "$xattr_output" ]]; then
        log "DEBUG" "File $file already processed or marked as larger." "${REMAINING_LOG}"
        continue
    else
        log "INFO" "Pending file to process: $file" "${REMAINING_LOG}"
    fi
done <<< "$files_pending"

log "INFO" "Finished searching for pending files." "${REMAINING_LOG}"
